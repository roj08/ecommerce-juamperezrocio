{"ast":null,"code":"var _jsxFileName = \"/Users/rojuamperez/Documents/Programacion/Coder House/React/App/ecommerce-juamperezrocio2/src/context/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext(null);\n\nconst CartProvider = props => {\n  _s();\n\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const addToCart = (item, qty) => {\n    if (cart.some(el => el.id === item.id)) {\n      const newCart = [...cart];\n      newCart.forEach(el => {\n        if (el.id === item.id) {\n          el.qty = el.qty + qty;\n        }\n      });\n      console.log(newCart);\n      setCart([...newCart]);\n    } else {\n      let product = { ...item,\n        qty\n      };\n      setCart([...cart, product]);\n    }\n  };\n\n  const deleteCartById = id => {\n    const newCart = [...cart];\n    let index = newCart.findIndex(el => el.id === id);\n    newCart.splice(index, 1);\n    setCart([...newCart]);\n  };\n\n  const deleteCart = () => {\n    setCart([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      setCart,\n      addToCart,\n      deleteCartById,\n      deleteCart\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"7rk9FDm0U5iLhz2ic5vTXjiTzGg=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/rojuamperez/Documents/Programacion/Coder House/React/App/ecommerce-juamperezrocio2/src/context/CartContext.js"],"names":["React","createContext","useState","CartContext","CartProvider","props","cart","setCart","total","setTotal","addToCart","item","qty","some","el","id","newCart","forEach","console","log","product","deleteCartById","index","findIndex","splice","deleteCart","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,IAAD,CAAjC;;AAEP,MAAMG,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMQ,SAAS,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,QAAIN,IAAI,CAACO,IAAL,CAAWC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUJ,IAAI,CAACI,EAAjC,CAAJ,EAA0C;AACxC,YAAMC,OAAO,GAAG,CAAC,GAAGV,IAAJ,CAAhB;AACAU,MAAAA,OAAO,CAACC,OAAR,CAAiBH,EAAD,IAAQ;AACtB,YAAIA,EAAE,CAACC,EAAH,KAAUJ,IAAI,CAACI,EAAnB,EAAuB;AACrBD,UAAAA,EAAE,CAACF,GAAH,GAASE,EAAE,CAACF,GAAH,GAASA,GAAlB;AACD;AACF,OAJD;AAKAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEAT,MAAAA,OAAO,CAAC,CAAC,GAAGS,OAAJ,CAAD,CAAP;AACD,KAVD,MAUO;AACL,UAAII,OAAO,GAAG,EAAE,GAAGT,IAAL;AAAWC,QAAAA;AAAX,OAAd;AACAL,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUc,OAAV,CAAD,CAAP;AACD;AACF,GAfD;;AAiBA,QAAMC,cAAc,GAAIN,EAAD,IAAQ;AAC7B,UAAMC,OAAO,GAAG,CAAC,GAAGV,IAAJ,CAAhB;AACA,QAAIgB,KAAK,GAAGN,OAAO,CAACO,SAAR,CAAmBT,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUA,EAApC,CAAZ;AAEAC,IAAAA,OAAO,CAACQ,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AAEAf,IAAAA,OAAO,CAAC,CAAC,GAAGS,OAAJ,CAAD,CAAP;AACD,GAPD;;AASA,QAAMS,UAAU,GAAG,MAAM;AACvBlB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,IADK;AAELC,MAAAA,OAFK;AAGLG,MAAAA,SAHK;AAILW,MAAAA,cAJK;AAKLI,MAAAA;AALK,KADT;AAAA,cASGpB,KAAK,CAACqB;AATT;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/CD;;GAAMtB,Y;;KAAAA,Y;AAiDN,eAAeA,YAAf","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const CartContext = createContext(null);\n\nconst CartProvider = (props) => {\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const addToCart = (item, qty) => {\n    if (cart.some((el) => el.id === item.id)) {\n      const newCart = [...cart];\n      newCart.forEach((el) => {\n        if (el.id === item.id) {\n          el.qty = el.qty + qty;\n        }\n      });\n      console.log(newCart);\n\n      setCart([...newCart]);\n    } else {\n      let product = { ...item, qty };\n      setCart([...cart, product]);\n    }\n  };\n\n  const deleteCartById = (id) => {\n    const newCart = [...cart];\n    let index = newCart.findIndex((el) => el.id === id);\n\n    newCart.splice(index, 1);\n\n    setCart([...newCart]);\n  };\n\n  const deleteCart = () => {\n    setCart([]);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        setCart,\n        addToCart,\n        deleteCartById,\n        deleteCart,\n      }}\n    >\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}